{"ast":null,"code":"import _slicedToArray from\"/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectDestructuringEmpty from\"/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js\";import React,{Component,useEffect,useState}from'react';import socket from\"../socket\";import User from\"./User\";import MessagePanel from\"./MessagePanel\";import\"./Chat.scoped.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Chat=function Chat(_ref){_objectDestructuringEmpty(_ref);var _useState=useState(null),_useState2=_slicedToArray(_useState,2),selectedUser=_useState2[0],setSelectedUser=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),users=_useState4[0],setUsers=_useState4[1];var getSelectUser=function getSelectUser(selectuser){setSelectedUser(selectuser);selectuser.hasNewMessages=false;console.log(\"selectuser : \",selectuser);};useEffect(function(){users.forEach(function(user){console.log(\"users test\",user.username,user.connected);});},[users]);useEffect(function(){socket.on(\"connect\",function(){console.log(\"clientconnect\");users.forEach(function(user){if(user.self){user.connected=true;}});});socket.on(\"disconnect\",function(){users.forEach(function(user){if(user.self){user.connected=false;}});});socket.on(\"users\",function(userss){userss.forEach(function(user){console.log(\"user : \",user);user.self=user.userID===socket.id;initReactiveProperties(user);});// put the current user first, and sort by username\nvar userstmp=[];userstmp=userss.sort(function(a,b){if(a.self)return-1;if(b.self)return 1;if(a.username<b.username)return-1;return a.username>b.username?1:0;});setUsers(userstmp);console.log(\"userstmp : \",userstmp);});socket.on(\"user connected\",function(user){initReactiveProperties(user);setUsers(users.concat(user));console.log(\"user connected : \",users);//users.push(user);\n});socket.on(\"user disconnected\",function(id){for(var i=0;i<users.length;i++){var user=users[i];if(user.userID===id){user.connected=false;console.log(\"user disconnected : \",user);break;}}});socket.on(\"private message\",function(_ref2){var content=_ref2.content,from=_ref2.from;for(var i=0;i<users.length;i++){var user=users[i];if(user.userID===from){user.messages.push({content:content,fromSelf:false});if(user!==selectedUser){user.hasNewMessages=true;}break;}}});});var initReactiveProperties=function initReactiveProperties(user){user.connected=true;user.messages=[];user.hasNewMessages=false;};var onMessage=function onMessage(content){if(selectedUser){socket.emit(\"private message\",{content:content,to:selectedUser.userID});selectedUser.messages.push({content:content,fromSelf:true});}};// const onSelectUser = (user) => {\n//     setSelectedUser(user);\n//     user.hasNewMessages = false;\n// }\nReact.useEffect(function(){return function(){console.log(\"UNMOUNT\");socket.off(\"connect\");socket.off(\"disconnect\");socket.off(\"users\");socket.off(\"user connected\");socket.off(\"user disconnected\");socket.off(\"private message\");};},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"left-panel\",children:users.map(function(user){return/*#__PURE__*/_jsx(User,{user:user,selected:selectedUser===user,getSelectUser:getSelectUser});})}),/*#__PURE__*/_jsx(\"div\",{className:\"right-panel\",children:selectedUser?/*#__PURE__*/_jsx(MessagePanel,{user:selectedUser,onMessage:onMessage,className:\"right-panel\"}):null})]});};export default Chat;","map":{"version":3,"sources":["/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/src/components/Chat.js"],"names":["React","Component","useEffect","useState","socket","User","MessagePanel","Chat","selectedUser","setSelectedUser","users","setUsers","getSelectUser","selectuser","hasNewMessages","console","log","forEach","user","username","connected","on","self","userss","userID","id","initReactiveProperties","userstmp","sort","a","b","concat","i","length","content","from","messages","push","fromSelf","onMessage","emit","to","off","map"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport socket from \"../socket\";\nimport User from \"./User\";\nimport MessagePanel from \"./MessagePanel\";\nimport \"./Chat.scoped.css\";\n\nconst Chat = ({}) => {\n    const [selectedUser, setSelectedUser] = useState(null);\n    const [users, setUsers] = useState([]);\n\n    const getSelectUser = (selectuser) => {\n        setSelectedUser(selectuser);\n        selectuser.hasNewMessages = false;\n        console.log(\"selectuser : \", selectuser);\n    }\n\n    useEffect(() => {\n        users.forEach((user) => {\n            console.log(\"users test\", user.username, user.connected);\n        })\n        \n    }, [users])\n\n    useEffect(()=>{\n        socket.on(\"connect\", () => {\n            console.log(\"clientconnect\");\n            users.forEach((user) => {\n                if (user.self) {\n                    user.connected = true;\n                }\n            });\n        });\n          \n        socket.on(\"disconnect\", () => {\n            users.forEach((user) => {\n                if (user.self) {\n                    user.connected = false;\n                }\n            });\n        });\n\n        socket.on(\"users\", (userss) => {\n            userss.forEach((user) => {\n                console.log(\"user : \", user);\n                user.self = user.userID === socket.id; \n                initReactiveProperties(user);\n            });\n            // put the current user first, and sort by username\n            var userstmp = []\n            userstmp = userss.sort((a, b) => {\n                if (a.self) return -1;\n                if (b.self) return 1;\n                if (a.username < b.username) return -1;\n                return a.username > b.username ? 1 : 0;\n            });\n            setUsers(userstmp);\n            console.log(\"userstmp : \", userstmp);\n            \n        });\n\n        socket.on(\"user connected\", (user) => {\n            initReactiveProperties(user);\n            setUsers(users.concat(user));\n            console.log(\"user connected : \", users);\n            //users.push(user);\n        });\n      \n        socket.on(\"user disconnected\", (id) => {\n            for (let i = 0; i < users.length; i++) {\n                const user = users[i];\n                if (user.userID === id) {\n                    user.connected = false;\n                    console.log(\"user disconnected : \", user);\n                    break;\n                }\n            }\n        });\n    \n        socket.on(\"private message\", ({ content, from }) => {\n            for (let i = 0; i < users.length; i++) {\n                const user = users[i];\n                if (user.userID === from) {\n                    user.messages.push({\n                        content,\n                        fromSelf: false,\n                    });\n                    if (user !== selectedUser) {\n                        user.hasNewMessages = true;\n                    }\n                    break;\n                }\n            }\n        });\n    \n    })\n  \n    const initReactiveProperties = (user) => {\n        user.connected = true;\n        user.messages = [];\n        user.hasNewMessages = false;\n    };\n\n    const onMessage = (content) => {\n        if(selectedUser){\n            socket.emit(\"private message\", {\n                content,\n                to: selectedUser.userID,\n            });\n            selectedUser.messages.push({\n                content,\n                fromSelf: true,\n            });\n        }\n    }\n    // const onSelectUser = (user) => {\n    //     setSelectedUser(user);\n    //     user.hasNewMessages = false;\n    // }\n\n    React.useEffect(() => {\n        return () => {\n            console.log(\"UNMOUNT\")\n            socket.off(\"connect\");\n            socket.off(\"disconnect\");\n            socket.off(\"users\");\n            socket.off(\"user connected\");\n            socket.off(\"user disconnected\");\n            socket.off(\"private message\");\n        }\n    }, []);\n\n    return(\n        <div>\n            <div className=\"left-panel\">\n                {\n                    users.map(user => (\n                        <User user={user} selected={selectedUser === user} getSelectUser={getSelectUser}/>\n                    ))\n                }\n            </div>\n            <div className=\"right-panel\">\n                {\n                    selectedUser?\n                    <MessagePanel \n                        user = {selectedUser}\n                        onMessage = {onMessage}\n                        className=\"right-panel\"\n                    /> : null\n                }\n\n            </div>\n        </div>\n    );\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}