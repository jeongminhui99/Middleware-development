{"ast":null,"code":"import _slicedToArray from\"/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectDestructuringEmpty from\"/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js\";import _readOnlyError from\"/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/node_modules/@babel/runtime/helpers/esm/readOnlyError.js\";var _this=this;import React,{Component,useState}from'react';import socket from\"../socket\";import User from\"./User\";import MessagePanel from\"./MessagePanel\";import\"./Chat.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Chat=function Chat(_ref){_objectDestructuringEmpty(_ref);var _useState=useState(null),_useState2=_slicedToArray(_useState,2),selectedUser=_useState2[0],setSelectedUser=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),users=_useState4[0],setUsers=_useState4[1];socket.on(\"connect\",function(){users.forEach(function(user){if(user.self){user.connected=true;}});});socket.on(\"disconnect\",function(){users.forEach(function(user){if(user.self){user.connected=false;}});});var initReactiveProperties=function initReactiveProperties(user){user.connected=true;user.messages=[];user.hasNewMessages=false;};socket.on(\"users\",function(userss){userss.forEach(function(user){user.self=user.userID===socket.id;initReactiveProperties(user);});// put the current user first, and sort by username\nuserss.sort(function(a,b){if(a.self)return-1;if(b.self)return 1;if(a.username<b.username)return-1;return a.username>b.username?1:0;}),_readOnlyError(\"users\");});socket.on(\"user connected\",function(user){initReactiveProperties(user);users.push(user);});socket.on(\"user disconnected\",function(id){for(var i=0;i<users.length;i++){var user=_this.users[i];if(user.userID===id){user.connected=false;break;}}});socket.on(\"private message\",function(_ref2){var content=_ref2.content,from=_ref2.from;for(var i=0;i<users.length;i++){var user=users[i];if(user.userID===from){user.messages.push({content:content,fromSelf:false});if(user!==selectedUser){user.hasNewMessages=true;}break;}}});React.useEffect(function(){return function(){console.log(\"UNMOUNT\");socket.off(\"connect\");socket.off(\"disconnect\");socket.off(\"users\");socket.off(\"user connected\");socket.off(\"user disconnected\");socket.off(\"private message\");};},[]);var onMessage=function onMessage(content){if(selectedUser){socket.emit(\"private message\",{content:content,to:selectedUser.userID});selectedUser.messages.push({content:content,fromSelf:true});}};var onSelectUser=function onSelectUser(user){setSelectedUser(user);user.hasNewMessages=false;};return/*#__PURE__*/_jsxs(\"div\",{className:\"left-panel\",children:[/*#__PURE__*/_jsx(User,{user:users,selected:selectedUser}),/*#__PURE__*/_jsx(MessagePanel,{})]});};export default Chat;","map":{"version":3,"sources":["/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/src/components/Chat.js"],"names":["React","Component","useState","socket","User","MessagePanel","Chat","selectedUser","setSelectedUser","users","setUsers","on","forEach","user","self","connected","initReactiveProperties","messages","hasNewMessages","userss","userID","id","sort","a","b","username","push","i","length","content","from","fromSelf","useEffect","console","log","off","onMessage","emit","to","onSelectUser"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport socket from \"../socket\";\nimport User from \"./User\";\nimport MessagePanel from \"./MessagePanel\";\nimport \"./Chat.css\";\n\nconst Chat = ({}) => {\n    const [selectedUser, setSelectedUser] = useState(null);\n    const [users, setUsers] = useState([]);\n    socket.on(\"connect\", () => {\n        users.forEach((user) => {\n            if (user.self) {\n                user.connected = true;\n            }\n        });\n    });\n  \n    socket.on(\"disconnect\", () => {\n        users.forEach((user) => {\n            if (user.self) {\n                user.connected = false;\n            }\n        });\n    });\n  \n    const initReactiveProperties = (user) => {\n        user.connected = true;\n        user.messages = [];\n        user.hasNewMessages = false;\n    };\n\n    socket.on(\"users\", (userss) => {\n        userss.forEach((user) => {\n            user.self = user.userID === socket.id; \n            initReactiveProperties(user);\n        });\n        // put the current user first, and sort by username\n        users = userss.sort((a, b) => {\n            if (a.self) return -1;\n            if (b.self) return 1;\n            if (a.username < b.username) return -1;\n            return a.username > b.username ? 1 : 0;\n        });\n    });\n  \n    socket.on(\"user connected\", (user) => {\n        initReactiveProperties(user);\n        users.push(user);\n    });\n  \n    socket.on(\"user disconnected\", (id) => {\n        for (let i = 0; i < users.length; i++) {\n            const user = this.users[i];\n            if (user.userID === id) {\n                user.connected = false;\n                break;\n            }\n        }\n    });\n\n    socket.on(\"private message\", ({ content, from }) => {\n        for (let i = 0; i < users.length; i++) {\n            const user = users[i];\n            if (user.userID === from) {\n                user.messages.push({\n                    content,\n                    fromSelf: false,\n                });\n                if (user !== selectedUser) {\n                    user.hasNewMessages = true;\n                }\n                break;\n            }\n        }\n    });\n\n    React.useEffect(() => {\n        return () => {\n            console.log(\"UNMOUNT\")\n            socket.off(\"connect\");\n            socket.off(\"disconnect\");\n            socket.off(\"users\");\n            socket.off(\"user connected\");\n            socket.off(\"user disconnected\");\n            socket.off(\"private message\");\n        }\n    }, []);\n\n    const onMessage = (content) => {\n        if(selectedUser){\n            socket.emit(\"private message\", {\n                content,\n                to: selectedUser.userID,\n            });\n            selectedUser.messages.push({\n                content,\n                fromSelf: true,\n            });\n        }\n    }\n    const onSelectUser = (user) => {\n        setSelectedUser(user);\n        user.hasNewMessages = false;\n    }\n\n\n\n    return(\n        <div className=\"left-panel\">\n            \n            <User user={users} selected={selectedUser}/>\n            <MessagePanel/>\n        </div>\n    );\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}