{"ast":null,"code":"import _slicedToArray from\"/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{Component,useEffect,useState}from'react';import socket from\"../socket\";import User from\"./User\";import MessagePanel from\"./MessagePanel\";import\"./Chat.scoped.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Chat=function Chat(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),selectedUser=_useState2[0],setSelectedUser=_useState2[1];var _useState3=useState({id:\"fff\",ff:[{d:\"ddd\"}]}),_useState4=_slicedToArray(_useState3,2),selectedm=_useState4[0],setSelectedm=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),users=_useState6[0],setUsers=_useState6[1];socket.on(\"connect\",function(){console.log(\"clientconnect\");users.forEach(function(user){if(user.self){user.connected=true;}});});socket.on(\"disconnect\",function(){users.forEach(function(user){if(user.self){user.connected=false;}});});socket.on(\"users\",function(userss){userss.forEach(function(user){console.log(\"user : \",user);user.self=user.userID===socket.id;initReactiveProperties(user);});// put the current user first, and sort by username\nvar userstmp=[];userstmp=userss.sort(function(a,b){if(a.self)return-1;if(b.self)return 1;if(a.username<b.username)return-1;return a.username>b.username?1:0;});setUsers(userstmp);console.log(\"userstmp : \",userstmp);});socket.on(\"user connected\",function(user){initReactiveProperties(user);setUsers(users.concat(user));console.log(\"user connected : \",users);//users.push(user);\n});socket.on(\"user disconnected\",function(id){for(var i=0;i<users.length;i++){var user=users[i];if(user.userID===id){user.connected=false;setUsers(users);break;}}});useEffect(function(){socket.on(\"private message\",function(_ref){var content=_ref.content,from=_ref.from;//console.log(\"pppp\");\nfor(var i=0;i<users.length;i++){var user=users[i];if(user.userID===from){console.log(\"content\",content);user.messages.push({content:content,fromSelf:false});if(user!==selectedUser){user.hasNewMessages=true;}break;}}console.log(users);console.log(selectedUser);});return function(){console.log(\"UNMOUNT\");socket.off(\"private message\");};});// useEffect(() => {\n//     return () => {\n//         console.log(\"UNMOUNT\")\n//         socket.off(\"connect\");\n//         socket.off(\"disconnect\");\n//         socket.off(\"users\");\n//         socket.off(\"user connected\");\n//         socket.off(\"user disconnected\");\n//         socket.off(\"private message\");\n//     }\n// }, []);\nvar initReactiveProperties=function initReactiveProperties(user){user.connected=true;user.messages=[];user.hasNewMessages=false;};var getSelectUser=function getSelectUser(selectuser){setSelectedUser(selectuser);selectuser.hasNewMessages=false;console.log(\"selectuser : \",selectuser);};var onMessage=function onMessage(content){console.log(\"onMessage : \",content,users,selectedUser);if(selectedUser){//console.log(\"selectedUser : \", selectedUser);\nsocket.emit(\"private message\",{content:content,to:selectedUser.userID});selectedUser.messages.concat({content:content,fromSelf:true});//([{id:\"fff\", ff:[{0:\"ddd\"}]}]);\nvar test2=selectedm.ff.concat({d:\"fff\"});console.log(selectedm);setSelectedm(test2);//setSelectedUser(test);\n}};// const onSelectUser = (user) => {\n//     setSelectedUser(user);\n//     user.hasNewMessages = false;\n// }\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"left-panel\",children:[users.map(function(user){return/*#__PURE__*/_jsx(User,{user:user,selected:selectedUser===user,getSelectUser:getSelectUser});}),selectedm?/*#__PURE__*/_jsx(\"div\",{children:selectedm.ff&&selectedm.ff.map(function(m){return/*#__PURE__*/_jsx(\"div\",{children:m.d});})}):null]}),/*#__PURE__*/_jsx(\"div\",{className:\"right-panel\",children:selectedUser?/*#__PURE__*/_jsx(MessagePanel,{user:selectedUser,onMessage:onMessage,className:\"right-panel\"}):null})]});};export default Chat;","map":{"version":3,"sources":["/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/src/components/Chat.js"],"names":["React","Component","useEffect","useState","socket","User","MessagePanel","Chat","selectedUser","setSelectedUser","id","ff","d","selectedm","setSelectedm","users","setUsers","on","console","log","forEach","user","self","connected","userss","userID","initReactiveProperties","userstmp","sort","a","b","username","concat","i","length","content","from","messages","push","fromSelf","hasNewMessages","off","getSelectUser","selectuser","onMessage","emit","to","test2","map","m"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport socket from \"../socket\";\nimport User from \"./User\";\nimport MessagePanel from \"./MessagePanel\";\nimport \"./Chat.scoped.css\";\n\nconst Chat = () => {\n    const [selectedUser, setSelectedUser] = useState(null);\n    const [selectedm, setSelectedm] = useState({id:\"fff\", ff:[{d:\"ddd\"}]});\n    const [users, setUsers] = useState([]);\n\n\n    socket.on(\"connect\", () => {\n        console.log(\"clientconnect\");\n        users.forEach((user) => {\n            if (user.self) {\n                user.connected = true;\n            }\n        });\n    });\n      \n    socket.on(\"disconnect\", () => {\n        users.forEach((user) => {\n            if (user.self) {\n                user.connected = false;\n            }\n        });\n    });\n\n    socket.on(\"users\", (userss) => {\n        userss.forEach((user) => {\n            console.log(\"user : \", user);\n            user.self = user.userID === socket.id; \n            initReactiveProperties(user);\n        });\n        // put the current user first, and sort by username\n        var userstmp = []\n        userstmp = userss.sort((a, b) => {\n            if (a.self) return -1;\n            if (b.self) return 1;\n            if (a.username < b.username) return -1;\n            return a.username > b.username ? 1 : 0;\n        });\n        setUsers(userstmp);\n        console.log(\"userstmp : \", userstmp);\n        \n    });\n\n    socket.on(\"user connected\", (user) => {\n        initReactiveProperties(user);\n        setUsers(users.concat(user));\n        console.log(\"user connected : \", users);\n        //users.push(user);\n    });\n  \n    socket.on(\"user disconnected\", (id) => {\n        for (let i = 0; i < users.length; i++) {\n            const user = users[i];\n            if (user.userID === id) {\n                user.connected = false;\n                setUsers(users);\n                break;\n            }\n        }\n    });\n\n    useEffect(()=> {\n        socket.on(\"private message\", ({ content, from }) => {\n            //console.log(\"pppp\");\n            for (let i = 0; i < users.length; i++) {\n                const user = users[i];\n                if (user.userID === from) {\n                    console.log(\"content\", content);        \n                    user.messages.push({\n                        content,\n                        fromSelf: false,\n                    });\n                    if (user !== selectedUser) {\n                        user.hasNewMessages = true;\n                    }\n                    break;\n                }\n            }\n            console.log(users);\n            console.log(selectedUser);\n        });\n        return () => {\n            console.log(\"UNMOUNT\")\n            socket.off(\"private message\");\n        }\n    });\n\n\n    // useEffect(() => {\n    //     return () => {\n    //         console.log(\"UNMOUNT\")\n    //         socket.off(\"connect\");\n    //         socket.off(\"disconnect\");\n    //         socket.off(\"users\");\n    //         socket.off(\"user connected\");\n    //         socket.off(\"user disconnected\");\n    //         socket.off(\"private message\");\n    //     }\n    // }, []);\n  \n    const initReactiveProperties = (user) => {\n        user.connected = true;\n        user.messages = [];\n        user.hasNewMessages = false;\n    };\n\n    const getSelectUser = (selectuser) => {\n        setSelectedUser(selectuser);\n        selectuser.hasNewMessages = false;\n        console.log(\"selectuser : \", selectuser);\n    }\n\n    const onMessage = (content) => {\n        console.log(\"onMessage : \", content, users, selectedUser);\n        if(selectedUser){\n            //console.log(\"selectedUser : \", selectedUser);\n            socket.emit(\"private message\", {\n                content,\n                to: selectedUser.userID,\n            });\n            selectedUser.messages.concat({\n                content,\n                fromSelf: true,\n            });\n            //([{id:\"fff\", ff:[{0:\"ddd\"}]}]);\n            var test2 = selectedm.ff.concat({d:\"fff\"});\n            console.log(selectedm);\n            setSelectedm(test2);\n            //setSelectedUser(test);\n        }\n    }\n    // const onSelectUser = (user) => {\n    //     setSelectedUser(user);\n    //     user.hasNewMessages = false;\n    // }\n\n    return(\n        <div>\n            <div className=\"left-panel\">\n                {\n                    users.map(user => (\n                        <User user={user} selected={selectedUser === user} getSelectUser={getSelectUser}/>\n                    ))\n                }\n                {selectedm? <div>{ selectedm.ff && selectedm.ff.map((m)=>(<div>{m.d}</div>))}</div>: null}\n            </div>\n            <div className=\"right-panel\">\n            \n                {\n                    selectedUser?\n                    <MessagePanel user = {selectedUser} onMessage = {onMessage} className=\"right-panel\"/> : null\n                }\n\n            </div>\n        </div>\n    );\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}