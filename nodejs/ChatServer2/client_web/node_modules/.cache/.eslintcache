[{"/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/src/index.js":"1","/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/src/App.js":"2","/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/src/socket.js":"3","/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/src/components/SelectUsername.js":"4","/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/src/components/Chat.js":"5","/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/src/components/MessagePanel.js":"6","/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/src/components/User.js":"7","/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/src/components/StatusIcon.js":"8","/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/src/components/test.js":"9"},{"size":387,"mtime":1643862369433,"results":"10","hashOfConfig":"11"},{"size":2708,"mtime":1644472319507,"results":"12","hashOfConfig":"11"},{"size":652,"mtime":1644467932591,"results":"13","hashOfConfig":"11"},{"size":965,"mtime":1644468575573,"results":"14","hashOfConfig":"11"},{"size":5310,"mtime":1644324691349,"results":"15","hashOfConfig":"11"},{"size":2135,"mtime":1643994593155,"results":"16","hashOfConfig":"11"},{"size":1051,"mtime":1643997801650,"results":"17","hashOfConfig":"11"},{"size":316,"mtime":1643941743707,"results":"18","hashOfConfig":"11"},{"size":135,"mtime":1644470396592,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"25wid9",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/src/index.js",[],"/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/src/App.js",["43","44"],"/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/src/socket.js",[],"/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/src/components/SelectUsername.js",["45"],"import React, { Component, useState } from 'react';\nimport \"./SelectUsername.scoped.css\";\n\nconst SelectUsername = ({ username, getData }) => {\n    //const [username, setUsername] = useState('');\n    const [isValid, setisValid] = useState(false); \n    const [finalname, setFinalname] = useState('');\n    //onChange={e => setUsername(e.target.value)}\n    \n    const onSubmit = (event) => {\n        event.preventDefault();\n        //console.log(finalname);\n        username = finalname\n        getData(username);\n    }\n\n\n    const isvalid = (username) => {\n        setFinalname(username);\n        return username.length > 2;\n    }\n\n    return (\n        <div className=\"select-username\">\n            <form onSubmit={onSubmit}>\n                <input placeholder=\"Your username...\" onChange={e => setisValid(isvalid(e.target.value))}/>\n                <button disabled={!isValid}>Send</button>\n            </form>\n        </div>\n    );\n}\n\nexport default SelectUsername;\n","/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/src/components/Chat.js",["46"],"import React, { Component, useEffect, useState } from 'react';\nimport socket from \"../socket\";\nimport User from \"./User\";\nimport MessagePanel from \"./MessagePanel\";\nimport \"./Chat.scoped.css\";\n\nconst Chat = () => {\n    const [selectedUser, setSelectedUser] = useState(null);\n    //const [selectedm, setSelectedm] = useState({id:\"fff\", ff:[{d:\"ddd\"}]});\n    const [users, setUsers] = useState([]);\n\n\n    socket.on(\"connect\", () => {\n        console.log(\"clientconnect\");\n        users.forEach((user) => {\n            if (user.self) {\n                user.connected = true;\n            }\n        });\n    });\n      \n    socket.on(\"disconnect\", () => {\n        users.forEach((user) => {\n            if (user.self) {\n                user.connected = false;\n            }\n        });\n    });\n\n    socket.on(\"users\", (userss) => {\n        userss.forEach((user) => {\n            console.log(\"user : \", user);\n            for (let i = 0; i < users.length; i++) {\n                const existingUser = users[i];\n                if (existingUser.userID === user.userID) {\n                    existingUser.connected = user.connected;\n                    return;\n                }\n            }\n            user.self = user.userID === socket.userID;\n            //user.self = user.userID === socket.id; \n            initReactiveProperties(user);\n            users.push(user);\n        });\n        // put the current user first, and sort by username\n        var userstmp = []\n        userstmp = userss.sort((a, b) => {\n            if (a.self) return -1;\n            if (b.self) return 1;\n            if (a.username < b.username) return -1;\n            return a.username > b.username ? 1 : 0;\n        });\n        setUsers(userstmp);\n        console.log(\"userstmp : \", userstmp);\n        \n    });\n\n    socket.on(\"user connected\", (user) => {\n        for (let i = 0; i < users.length; i++) {\n            const existingUser = users[i];\n            if (existingUser.userID === user.userID){\n                existingUser.connected = true;\n                return;\n            }\n        }\n        initReactiveProperties(user);\n        setUsers(users.concat(user));\n        console.log(\"user connected : \", users);\n        //users.push(user);\n    });\n  \n    socket.on(\"user disconnected\", (id) => {\n        for (let i = 0; i < users.length; i++) {\n            const user = users[i];\n            if (user.userID === id) {\n                user.connected = false;\n                setUsers(users);\n                break;\n            }\n        }\n    });\n\n    useEffect(()=> {\n        socket.on(\"private message\", ({ content, from, to }) => {\n            console.log(\"content\", content, selectedUser);       \n            for (let i = 0; i < users.length; i++) {\n                const user = users[i];\n                const fromSelf = socket.userID === from;\n                if (user.userID === (fromSelf ? to : from)) {\n                    console.log(\"content22\", content, selectedUser);        \n                    user.messages.push({\n                        content,\n                        fromSelf,\n                    });  \n                    if (user !== selectedUser) {\n                        user.hasNewMessages = true;\n                    }\n                    break;\n                }\n            }\n            setSelectedUser(null);\n            setSelectedUser(selectedUser);\n        });\n        return () => {\n            console.log(\"UNMOUNT\")\n            socket.off(\"private message\");\n        }\n    });\n\n\n    useEffect(() => {\n        return () => {\n            console.log(\"UNMOUNT\")\n            socket.off(\"connect\");\n            socket.off(\"disconnect\");\n            socket.off(\"users\");\n            socket.off(\"user connected\");\n            socket.off(\"user disconnected\");\n        }\n    }, []);\n  \n    const initReactiveProperties = (user) => {\n        //user.connected = true;\n        user.messages = [];\n        user.hasNewMessages = false;\n    };\n\n    const getSelectUser = (selectuser) => {\n        setSelectedUser(selectuser);\n        selectuser.hasNewMessages = false;\n        console.log(\"selectuser : \", selectuser);\n    }\n\n    const onMessage = (content) => {\n        console.log(\"onMessage : \", content, users, selectedUser);\n        if(selectedUser){\n            //console.log(\"selectedUser : \", selectedUser);\n            socket.emit(\"private message\", {\n                content,\n                to: selectedUser.userID,\n            });\n\n            selectedUser.messages.push({\n                content,\n                fromSelf: true,\n            });\n        }\n    }\n    // const onSelectUser = (user) => {\n    //     setSelectedUser(user);\n    //     user.hasNewMessages = false;\n    // }\n\n    return(\n        <div>\n            <div className=\"left-panel\">\n                {\n                    users.map(user => (\n                        <User user={user} key={user.userID} selected={selectedUser === user} getSelectUser={getSelectUser}/>\n                    ))\n                }\n            </div>\n            <div className=\"right-panel\">\n            \n                {\n                    selectedUser?\n                    <MessagePanel user = {selectedUser} onMessage = {onMessage} className=\"right-panel\"/> : null\n                }\n\n            </div>\n        </div>\n    );\n}\n\nexport default Chat;","/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/src/components/MessagePanel.js",["47","48","49"],"import React, { Component, useEffect, useState } from 'react';\nimport StatusIcon from \"./StatusIcon\";\nimport \"./MessagePanel.scoped.css\";\n\nconst MessagePanel = ({ user, onMessage }) => {\n\n    const [input, setInput] = useState(\"\");\n    const [finalmsg, setFinalmsg] = useState(\"\");\n    const [isValid, setisValid] = useState(false); \n    const [msg, setMsg] = useState([{}]);\n\n    useEffect(()=>{\n        setMsg(user.messages);\n        console.log(msg);\n    },[user.messages]);\n\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        //console.log(\"msg : \", finalmsg);\n        onMessage(finalmsg);\n        setInput(\"\");\n        setFinalmsg(\"\");\n    }\n\n    const displaySender = (message, index) => {\n        return(\n            index === 0 ||\n            user.messages[index - 1].fromSelf !== \n            user.messages[index].fromSelf\n        );\n    }\n\n    const isvalid = (msg) => {\n        setFinalmsg(msg);\n        return msg.length > 0;\n    }\n\n    return(\n        <div>\n            <div className=\"header\">\n                <StatusIcon connected={user.connected}/> { user.username }\n            </div>        \n            <ul className=\"messages\">\n                {\n                    user.messages.map((message, index) => (\n                        <li className=\"message\">\n                            {displaySender(message, index)? \n                                <div className=\"sender\">\n                                    { message.fromSelf ? \"(yourself)\" : user.username }\n                                </div>\n                                :\n                                null\n                            }\n                            {message.content}\n                        </li>\n                    ))\n                }\n            </ul>\n            <form className=\"form\" onSubmit={onSubmit}>\n                <textarea placeholder=\"Your message...\" onChange={e => setisValid(isvalid(e.target.value))} className=\"input\" value={finalmsg}/>\n                <button disabled={!isValid} className=\"send-button\">Send</button>\n            </form>\n        </div>\n    );\n}\nexport default MessagePanel;","/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/src/components/User.js",["50"],"\nimport React, { Component, useEffect, useState } from 'react';\nimport StatusIcon from \"./StatusIcon\";\nimport \"./User.scoped.css\";\n\nconst User = ({ user, selected, getSelectUser }) => {\n\n    const [connect, setConnect] = useState(\"\");\n\n    const onClick = () => {\n        console.log(\"click!!\");\n        getSelectUser(user);\n    }\n\n    useEffect(()=>{\n        console.log(user.connected ? \"online\" : \"offline\");\n        setConnect(user.connected ? \"online\" : \"offline\");\n    },[user.connected]);\n\n    return(\n        <div className={`${selected ? 'selected' : ''} user`} onClick={onClick}> \n            <div className=\"description\">\n                <div className=\"name\">\n                    { user.username } { user.self ? \" (yourself)\" : \"\" }\n                </div>\n                <div className=\"status\">\n                    <StatusIcon connected={user.connected}/> { connect }\n                </div>\n            </div>\n            {user.hasNewMessages ? <div className=\"new-messages\">!</div> :  null}\n        </div>\n    );\n}\nexport default User;\n","/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/src/components/StatusIcon.js",["51","52"],"import React, { Component, useState } from 'react';\nimport \"./StatusIcon.scoped.css\";\n\nexport default function StatusIcon({\n    connected\n}) {\n\n    // const [connect, setConnect] = useState(false);\n    // setConnect(connected);\n\n    return(\n        <i className={`${connected ? 'connected' : ''} icon`}></i>\n    );\n}","/Users/minhuijeong/Documents/Nodejs/OXGameServer/client_web/src/components/test.js",[],{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},{"ruleId":"53","severity":1,"message":"57","line":6,"column":8,"nodeType":"55","messageId":"56","endLine":6,"endColumn":12},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},{"ruleId":"53","severity":1,"message":"58","line":7,"column":12,"nodeType":"55","messageId":"56","endLine":7,"endColumn":17},{"ruleId":"59","severity":1,"message":"60","line":15,"column":7,"nodeType":"61","endLine":15,"endColumn":22,"suggestions":"62"},{"ruleId":"53","severity":1,"message":"54","line":2,"column":17,"nodeType":"55","messageId":"56","endLine":2,"endColumn":26},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},{"ruleId":"53","severity":1,"message":"63","line":1,"column":28,"nodeType":"55","messageId":"56","endLine":1,"endColumn":36},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Test' is defined but never used.","'input' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'msg'. Either include it or remove the dependency array.","ArrayExpression",["64"],"'useState' is defined but never used.",{"desc":"65","fix":"66"},"Update the dependencies array to be: [msg, user.messages]",{"range":"67","text":"68"},[460,475],"[msg, user.messages]"]